<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.parameters.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.cg.admin.repo.CityRepo"/>
    <fullyQualifiedTypeName name="com.cg.admin.repo.MoviesRepo"/>
    <fullyQualifiedTypeName name="com.cg.admin.repo.TheaterRepo"/>
    <fullyQualifiedTypeName name="com.cg.admin.services.MovieService"/>
    <fullyQualifiedTypeName name="com.cg.admin.services.MovieServiceImpl"/>
    <fullyQualifiedTypeName name="com.cg.admin.pojo.City"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="com.cg.admin.pojo.Movies"/>
    <fullyQualifiedTypeName name="com.cg.admin.pojo.Theater"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler"/>
    <fullyQualifiedTypeName name="com.cg.admin.exception.InvalidId"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.cg.user.dto.CityDTO"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.cg.user.dto.MovieDTO"/>
    <fullyQualifiedTypeName name="com.cg.user.dto.TheaterDTO"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.HttpClientErrorException"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Aspect"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBeans"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.cg.user.dao.UserRepo"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="com.cg.user.service.UserService"/>
    <fullyQualifiedTypeName name="com.cg.user.service.UserServiceImpl"/>
    <fullyQualifiedTypeName name="com.cg.user.pojo.User"/>
    <fullyQualifiedTypeName name="com.cg.user.exception.InvalidId"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.provisioning.InMemoryUserDetailsManager"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
</qualifiedTypeNameHistroy>
